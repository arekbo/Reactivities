To open GIT BASH type bash in terminal and it will change the type of terminal to bash

****************************************************************************************

Write-Host "About to Create the directory" -ForegroundColor Green

mkdir Reactivities
cd Reactivities

Write-Host "About to create the solution and projects" -ForegroundColor Green
dotnet new sln
dotnet new webapi -n API
dotnet new classlib -n Application
dotnet new classlib -n Domain
dotnet new classlib -n Persistence

Write-Host "Adding projects to the solution" -ForegroundColor Green
dotnet sln add API/API.csproj
dotnet sln add Application/Application.csproj
dotnet sln add Domain/Domain.csproj
dotnet sln add Persistence/Persistence.csproj

Write-Host "Adding project references" -ForegroundColor Green
cd API
dotnet add reference ../Application/Application.csproj
cd ../Application
dotnet add reference ../Domain/Domain.csproj
dotnet add reference ../Persistence/Persistence.csproj

cd ../Persistence
dotnet add reference ../Domain/Domain.csproj
cd ..

Write-Host "Executing dotnet restore" -ForegroundColor Green
dotnet restore

Write-Host "Finished!" -ForegroundColor Green

****************************************************************************************

dotnet sln list

dotnet run

dotnet restore

https://www.nuget.org/packages/dotnet-ef#versions-body-tab

dotnet tool list -g   

dotnet tool install  --global dotnet-ef --version 7.0.2 
or
dotnet tool update  --global dotnet-ef --version 7.0.2 


dotnet ef migrations add InitialCreate -s API -p Persistence

dotnet watch

dotnet watch --no-hot-reload

//l to małe L
dotnet new -l

dotnet new gitignore

git status

git init

********

npx create-react-app client-app --use-npm --template typescript


npm install mobx mobx-react-lite

npm install react-router-dom

https://reactrouter.com/en/main
https://www.nuget.org/packages/dotnet-ef#versions-body-tab

npm install react-calendar

to install Typescript types
npm install @types/react-calendar

npm install react-toastify

z root:
dotnet ef database drop -s API -p Persistence

z client-app:
npm install formik

npm install yup
types:
npm install @types/yup --save-dev

npm WARN deprecated @types/yup@0.32.0: This is a stub types definition. yup provides its own type definitions, so you do not need this installed.
so:
npm remove @types/yup --save-dev

npm install react-datepicker
albo jak "unable to resolve dependency"
npm install react-datepicker --legacy-peer-deps
types:
npm install @types/react-datepicker --save-dev

npm ls date-fns

$ npm ls date-fns
client-app@0.1.0 D:\Development\ASP.NET CORE - REACT\Reactivities\client-app
├─┬ @types/react-datepicker@4.8.0
│ └── date-fns@2.29.3
└─┬ react-datepicker@4.10.0
  └── date-fns@2.29.3 deduped

  npm install date-fns@2.29.3

rezultat:

arek@AREK-PC  /d/Development/ASP.NET CORE - REACT/Reactivities/client-app (main)  
$ npm ls date-fns
client-app@0.1.0 D:\Development\ASP.NET CORE - REACT\Reactivities\client-app
├─┬ @types/react-datepicker@4.8.0
│ └── date-fns@2.29.3 deduped
├── date-fns@2.29.3
└─┬ react-datepicker@4.10.0
  └── date-fns@2.29.3 deduped



Identity:
nuget gallery
Microsoft.AspNetCore.Identity.EntityFrameworkCore

z root:
dotnet ef migrations add IdentityAdded -p Persistence -s API


Done. To undo this action, use 'ef migrations remove'

dotnet ef migrations remove -p Persistence -s API


The migration '20230211122206_IdentityAdded' has already been applied to the database. Revert it and try again. If the migration has been applied to other databases, 
consider reverting its changes using a new migration instead.


dotnet ef update-database  InitiallCreate  -p Persistence -s API
dotnet ef migrations remove -p Persistence -s API

restore:
dotnet restore

dotnet --info

Token:
nuget gallery into API project
System.IdentityModel.Tokens.Jwt

into API
Microsoft.AspNetCore.Authentication.JwtBearer

